#include <bits/stdc++.h>
using namespace std;
#define rep(i, n) for (int i = 0; i < (n); i++)

// üî∑ÂàùË¶ã„Åß„Å©„ÅÜ„ÇÑ„Å£„Åü„ÇâËß£„Åë„Çã„Åã
// ÁµÑÂêà„ÅõÊúÄÈÅ©ÂåñÂïèÈ°å„ÅÆ„ÅÜ„Å°„ÄÅÈÉ®ÂàÜÂàó„ÇíÊúÄÈÅ©Âåñ„Åô„ÇãÁ®Æ„ÅÆÂïèÈ°å„ÄÇ„Åì„ÅÆÁ®Æ„ÅÆÂïèÈ°å„ÅØLIS„ÇÑLCS„Å™„Å©ÈÉ®ÂàÜÂàó„Ç¢„É´„Ç¥„É™„Ç∫„É†„Çí‰Ωø„ÅÜ„Åì„Å®„ÅåÂ§ö„ÅÑ„ÄÇ
// ‰ªäÂõû„ÅØÂ¢óÂä†ÈÉ®ÂàÜÂàó„Å™„ÅÆ„ÅßLIS„Çí‰Ωø„ÅÜ„ÄÇ‰∏°ÂÅ¥„Åã„ÇâËÄÉ„Åà„Çå„Å∞ËâØ„ÅÑ„ÄÇ

int main() {
    int n; cin >> n;
    vector<int> a(n), rev(a);
    rep(i, n) {
        cin >> a[i];
        rev[n - i - 1] = a[i];
    }

    // ‰∏°ÂÅ¥LIS
    const int INF = n + 1;
    auto f = [&](const vector<int>& c) {
        vector<int> res(n);
        vector<int> dp(n, INF);
        rep(i, n) {
            *lower_bound(dp.begin(), dp.end(), c[i]) = c[i];
            res[i] = lower_bound(dp.begin(), dp.end(), INF) - dp.begin();
        }
        return res;
    };

    auto L = f(a);
    auto R = f(rev);

    int ans = 0;
    rep(i, n) {
        ans = max(ans, L[i] + R[n - i - 1] - 1);
    }
    cout << ans << endl;
}
