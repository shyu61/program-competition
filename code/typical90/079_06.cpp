#include <bits/stdc++.h>
using namespace std;
#define rep(i, n) for (int i = 0; i < (n); i++)
using ll = long long;

// 🔷初見でどうやったら解けるか
// 数え上げ,全ペア走査系,区間和に関する問題なのでまず累積和をとって考える。
// また剰余の問題なので、予め剰余を取った上で考える
// 累積和配列上で問題文を再解釈すると、lを固定した時、l<rかつAl=Arとなる要素の個数が解
// これは後ろから数えればO(1)で計算できる

// 🔷抑えるべき抽象論は？
// - 区間和が絡む問題は累積和をとった後の配列で問題文を再解釈するところからスタート
// - 和の剰余はあらかじめ剰余を取っておく
// - 全ペア走査系
//   - 一方を固定して累積構造を使ってO(1)で数える(後ろから数えるなど)
// 　  - 尺取り法もこれの一種
//   - 数式変形で二重ループを分解する
//   - 対称なものをまとめて数える
//   - 主客転倒
//   - その他コツ
//     - sortできるか確認
//     - グリッドも縦横のペア問題に帰着できる場合がある

int main() {
    int n, m; cin >> n >> m;
    vector<int> a(n);
    rep(i, n) {
        cin >> a[i];
        a[i] %= m;
    }
    vector<int> s(n + 1);
    rep(i, n) s[i + 1] = (s[i] + a[i]) % m;

    ll ans = 0;
    unordered_map<int, int> mp;
    for (int i = n; i >= 0; i--) {
        ans += mp[s[i]];
        mp[s[i]]++;
    }
    cout << ans << endl;
}
