// Nim(Nim): p277
#include <bits/stdc++.h>
using namespace std;
using ll = long long;

// XOR: Exclusive OR, 排他論理和, ORの拡張であり、A∪B - A∩B
// 各bitの1の個数が偶数の時に0になる -> 数理的な対称性を表現する

// NimでXORを考える理由は、円形のコイン問題と同様対称構造を利用するため
// 円形コインのように物理的対称性はないが、XORを使うことで数理的対称性を導入することができる
// 常に相手に数理的に対称な状態(XOR=0)を作り出せれば、相手の操作は絶対に最後の一手にはなり得ない(同時に1山に対してしか操作できないため、必ず操作後は非対称になる)ので必勝になる

// Nimのように、独立した部分集合群に対して統一的な1つの指標を作りたいときにXORは役立つ
// (XORはそれ以外にも適用できるケースがあるのでその限りではない)

int main() {
    int n; cin >> n;
    int x = 0;
    // 相手の操作時にXOR=0の状況を作り出せるなら必勝
    // -> 初期配置がXOR=0 => 必負
    // -> 初期配置がXOR≠0 => 必勝(操作して相手ターン時にXOR=0にできる)
    for (int i = 0; i < n; i++) {
        int a; cin >> a;
        x ^= a;
    }
    cout << (x != 0 ? "Alice" : "Bob") << endl;
}
