// ユークリッド互除法(線分上の格子点の個数): p107
#include <bits/stdc++.h>
using namespace std;

// 線分上の格子点の個数をgcdで計算できるのは有名問題なので覚えておく
// y/xが既約分数(x,yが互いに素)な時は端点以外に格子点はない。逆に言えば格子点はy/xの分母分子に対して同じ整数値で割ることができるときに存在する。
// その理由は傾きの比率を維持しつつ分母分子を整数値で小さくすることができたらそこが格子点になるから。
// よって互いに素にしたときに、その前に付く係数=gcd(x,y)-1が線分上の格子点の個数になる。

// ポイントは、y/xの分母分子を同じ整数で割るということを実現する上で、gcdが使えるということ。
// gcdは最大公約数であり、約数は倍数と対になる概念で、かつ割り切れる数という側面もある。同じ整数で割りたい -> 公約数を探したい -> gcdを使うという発想になる。

int gcd(int a, int b) {
    if (b == 0) return a;
    return gcd(b, a % b);
}

int main() {
    int x1, y1, x2, y2; cin >> x1 >> y1 >> x2 >> y2;
    int x = abs(x2 - x1);
    int y = abs(y2 - y1);

    if (x == 0 && y == 0) cout << 0 << endl;
    else cout << gcd(x, y) - 1 << endl;
}
